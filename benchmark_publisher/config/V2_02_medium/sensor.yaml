%YAML:1.0

imu_topic: "/imu0"
image_topic: "/cam0/image_raw"
output_path: "/home/zx/Output/TightCoupleLineVins"
#camera calibration 
model_type: PINHOLE
camera_name: camera
width: 752
height: 480

distortion_parameters:
  k1: -2.917e-01
  k2: 8.228e-02
  p1: 5.333e-05
  p2: -1.578e-04
projection_parameters:
  fx: 4.616e+02
  fy: 4.603e+02
  cx: 3.630e+02
  cy: 2.481e+02

#distortion_parameters:
k1: -0.28340811
k2: 0.07395907
p1: 0.00019359
p2: 1.76187114e-05
#projection_parameters:
fx: 458.654
fy: 457.296
cx: 367.215
cy: 248.375


# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 1   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
# 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.


#additional transform for bais
initialRotation: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   # data: [1, 0, 0,
   #        0, 1, 0,
   #        0, 0, 1]
   data: [-0.988751,    -0.14955,    0.00235588,
           0.149568,    -0.98862,    0.0161426,
          -8.50419e-05,  0.0163133,  0.999867]


     #Translation from first body frame to world frame
initialTranslation: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   # data: [0, 0, 0]
   data: [ -1.0077, 0.586792, -1.5049]
   
# Rotation from camera frame to imu frame, imu^R_cam
extrinsicRotation: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [0.0148655429818, -0.999880929698, 0.00414029679422,
           0.999557249008, 0.0149672133247, 0.025715529948, 
           -0.0257744366974, 0.00375618835797, 0.999660727178]
#Translation from camera frame to imu frame, imu^T_cam
extrinsicTranslation: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [-0.0216401454975,-0.064676986768, 0.00981073058949]


max_cnt: 150            # max feature number in feature tracking
min_dist: 30
freq: 10                # interval frame number for image line detection. If set 0, the frequence will be same as raw image
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
equalize: 1             # if image is too dark or light, turn on equalize to find enough features
fisheye: 0

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 30   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.08          # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 0.004         # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 0.00004         # accelerometer bias random work noise standard deviation.  #0.02
gyr_w: 2.0e-6       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.81007     # gravity magnitude

#loop closure parameters
loop_closure: 0   #if you want to use loop closure to minimize the drift, set loop_closure true and give your brief pattern file path and vocabulary file path accordingly;
#also give the camera calibration file same as feature_tracker node
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
fast_relocalization: 0             # useful in real-time and large project
pose_graph_save_path: "/home/zx/Output/pose_graph/" # save and load path
undisKeyLine: 0

#unsynchronization parameters
estimate_td: 0                      # online estimate time offset between camera and imu
td: 0.0

# optimization parameters
iterations: 1

savefile: 0
threshold: 30
lamda: 0.1045
show: 1

per_inliers: 50  # 14
length_threshold: 100    # length thershold of line features
lambda: 0.1745 #0.1745
overlap_th: 0.5  #0.45
dist_th: 50
degree_th: 0.1  # all angle is rad
angle_th: 0.1  # 0.3491 20 degree
outlier_th: 1   # or AveOverlap_in and 0.995

#rolling shutter parameters
rolling_shutter: 0                  # 0: global shutter camera, 1: rolling shutter camera
rolling_shutter_tr: 0               # unit: s. rolling shutter read out time per frame (from data sheet).

#visualization parameters
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0
visualize_imu_forward: 0        # output imu forward propogation to achieve low latency and high frequence results
visualize_camera_size: 0.4      # size of camera marker in RVIZ
